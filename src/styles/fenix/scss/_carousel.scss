// Notes on the classes:
//
// 1. .carousel.pointer-event should ideally be pan-y (to allow for users to scroll vertically)
//    even when their scroll action started on a carousel, but for compatibility (with Firefox)
//    we're preventing all actions instead
// 2. The .carousel-item-left and .carousel-item-right is used to indicate where
//    the active slide is heading.
// 3. .active.carousel-item is the current slide.
// 4. .active.carousel-item-left and .active.carousel-item-right is the current
//    slide in its in-transition state. Only one of these occurs at a time.
// 5. .carousel-item-next.carousel-item-left and .carousel-item-prev.carousel-item-right
//    is the upcoming slide in transition.

.carousel {
  position: relative;

  &:hover,
  &.icon-visible {
    .carousel-control-prev,
    .carousel-control-next {
      visibility: visible;
      opacity: 1;
    }

    .carousel-control-prev {
      left: 1rem;

      @include media-breakpoint-up(lg) {
        left: 2rem;
      }
    }
    .carousel-control-next {
      right: 1rem;

      @include media-breakpoint-up(lg) {
        right: 2rem;
      }
    }
  }
}

.carousel.pointer-event {
  touch-action: pan-y;
}

.carousel-inner {
  position: relative;
  width: 100%;
  overflow: hidden;
  @include clearfix();
  background-color: theme-color($key: "light-smoke");
}

.carousel-item {
  position: relative;
  display: none;
  float: left;
  width: 100%;
  margin-right: -100%;
  backface-visibility: hidden;
  @include transition($carousel-transition);

  img {
    width: 100%;
  }
}

.carousel-item.active,
.carousel-item-next,
.carousel-item-prev {
  display: block;
}

.carousel-item-next:not(.carousel-item-left),
.active.carousel-item-right {
  transform: translateX(100%);
}

.carousel-item-prev:not(.carousel-item-right),
.active.carousel-item-left {
  transform: translateX(-100%);
}

//
// Alternate transitions
//

.carousel-fade {
  .carousel-item {
    opacity: 0;
    transition-property: opacity;
    transform: none;
  }

  .carousel-item.active,
  .carousel-item-next.carousel-item-left,
  .carousel-item-prev.carousel-item-right {
    z-index: 1;
    opacity: 1;
  }

  .active.carousel-item-left,
  .active.carousel-item-right {
    z-index: 0;
    opacity: 0;
    @include transition(opacity 0s $carousel-transition-duration);
  }
}

//
// Left/right controls for nav
//

.carousel-control-prev,
.carousel-control-next {
  position: absolute;
  top: 40%;
  bottom: 0;
  z-index: 1;
  // Use flex for alignment (1-3)
  display: flex; // 1. allow flex styles
  align-items: center; // 2. vertically center contents
  justify-content: center; // 3. horizontally center contents
  width: $carousel-control-width;
  height: $carousel-control-width;
  color: $carousel-control-color;
  text-align: center;
  opacity: $carousel-control-opacity;
  @include transition($carousel-control-transition);
  visibility: hidden;
  transition-property: opacity, visibility, right, left;
  transition-duration: 0.2s, 0.2s, 0.2s, 0.2s;
  transition-timing-function: ease-in;
  transition-delay: 0.1s, 0.1s, 0.1s, 0.1s;

  @include media-breakpoint-down(sm) {
    display: none;
  }

  // Hover/focus state
  @include hover-focus() {
    color: $carousel-control-color;
    text-decoration: none;
    outline: 0;
    opacity: $carousel-control-hover-opacity;
  }

  &.gray {
    .carousel-control-prev-icon,
    .carousel-control-next-icon {
      border-color: theme-color($key: "light-smoke");
      background-color: theme-color($key: "extra-dark-snow");
    }
  }
}
.carousel-control-prev {
  left: 2rem;
  @include media-breakpoint-up(lg) {
    left: 3rem;
  }
  @if $enable-gradients {
    background-image: linear-gradient(90deg, rgba($black, 0.25), rgba($black, 0.001));
  }
}
.carousel-control-next {
  right: 2rem;
  @include media-breakpoint-up(lg) {
    right: 3rem;
  }
  @if $enable-gradients {
    background-image: linear-gradient(270deg, rgba($black, 0.25), rgba($black, 0.001));
  }
}

// Icons for within
.carousel-control-prev-icon,
.carousel-control-next-icon {
  display: inline-block;
  width: $carousel-control-icon-width;
  height: $carousel-control-icon-width;
  border-radius: 100%;
  border: 3px solid $white;
  background: rgba(255, 255, 255, 0.4);
  font-size: 22px;
  line-height: 1;
  background-image: none;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: $transition-base;
  cursor: pointer;

  &:before {
    @include icon;
  }

  &:hover {
    background: rgba(255, 255, 255, 0.6);
  }

  @include media-breakpoint-down(md) {
    width: 40px;
    height: 40px;
  }
}
.carousel-control-prev-icon {
  &:before {
    content: "\f060";
  }
}
.carousel-control-next-icon {
  &:before {
    content: "\f061";
  }
}

// Optional indicator pips
//
// Add an ordered list with the following class and add a list item for each
// slide your carousel holds.

.carousel-indicators {
  position: absolute;
  right: 0;
  bottom: 1rem;
  left: 0;
  z-index: 15;
  display: flex;
  justify-content: center;
  padding-left: 0; // override <ol> default
  // Use the .carousel-control's width as margin so we don't overlay those
  margin-right: $carousel-control-width;
  margin-left: $carousel-control-width;
  list-style: none;

  li {
    box-sizing: border-box;
    flex: 0 1 auto;
    width: $carousel-indicator-width;
    height: $carousel-indicator-height;
    margin-right: $carousel-indicator-spacer;
    margin-left: $carousel-indicator-spacer;
    text-indent: -999px;
    cursor: pointer;
    background-color: $carousel-indicator-active-bg;
    background-clip: padding-box;
    // Use transparent borders to increase the hit area by 10px on top and bottom.
    border-top: $carousel-indicator-hit-area-height solid transparent;
    border-bottom: $carousel-indicator-hit-area-height solid transparent;
    opacity: 1;
    @include transition($carousel-indicator-transition);
    border-radius: 100%;
    border: $border-width-lg solid theme-color($key: "dark-smoke");

    &.active {
      border-color: theme-color($key: "primary");
    }
  }

  .active {
    opacity: 1;
  }
}

// Optional captions
//
//

.carousel-caption {
  position: absolute;
  right: (100% - $carousel-caption-width) / 2;
  bottom: 2rem;
  left: (100% - $carousel-caption-width) / 2;
  z-index: 10;
  padding-top: 20px;
  padding-bottom: 20px;
  color: $carousel-caption-color;
  text-align: center;
//   text-transform: uppercase;

  @include media-breakpoint-down(sm) {
    right: 1rem;
    left: 1rem;
    bottom: 1.2rem;
  }

  @include media-breakpoint-up(lg) {
    max-width: 50%;
    margin: 0 auto;
  }

  .carousel-title {
    font-size: 60px;
    font-family: $font-family-secondary;
    margin-bottom: 2rem;

    @include media-breakpoint-down(md) {
      font-size: $h2-font-size;
      margin-bottom: 1rem;
    }

    @include media-breakpoint-down(sm) {
      font-size: $font-size-base;
    }
  }

  .btn {
    display: inline-flex;
    margin: 0 auto;
    background-color: $white;
    font-weight: $font-weight-light;
    padding: 1rem 2rem;

    @include media-breakpoint-down(sm) {
      padding: 0.25rem 1rem;
      font-size: $font-size-base;
    }
  }
}

.carousel-sm {
  .carousel {
    .carousel-inner {
      background-color: transparent;
    }

    .carousel-item {
      border-radius: $border-radius;
      overflow: hidden;
      text-align: center;

      &:before {
        padding-top: 62%;
        content: "";
        float: left;
      }

      &.active,
      &.carousel-item-left,
      &.carousel-item-next,
      &.carousel-item-right,
      &.carousel-item-prev {
        display: flex;
        align-items: center;
        justify-content: center;
      }

      img {
        box-sizing: border-box;
        width: auto;
        max-width: 100%;
        max-height: 100%;
        margin: auto;
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        left: 0;
        object-fit: contains;
      }
    }
    .carousel-control-prev,
    .carousel-control-next {
      top: 38%;
    }
  }
}
